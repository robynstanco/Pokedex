@using Pokedex.Common;

@model PokemonDetailViewModel

@{
    ViewData[Constants.Title] = "My " + Constants.Pokemon + " - " + Model.Name;
}

<div class="pokemon__container">
    <div class="pokemon__item pokemon__item--large">
        <img class="pokemon__item-img" src="@Model.ImageUrl" />

        <h1>@Model.Name</h1>

        <img class="pokeball__item-img--small" src="@Model.PokeballImageUrl" />

        @if (!Model.Sex.Value)
        {
            <img class="pokemon__item-img--small" src="~/images/woman.png" />
        }

        @if (Model.Sex.Value)
        {
            <img class="pokemon__item-img--small" src="~/images/male.png" />
        }

        @if (!Model.IsEditMode)
        {
            @if (!string.IsNullOrWhiteSpace(Model.Nickname))
            {
                <h2>@Constants.Nickname: <em>@Model.Nickname</em></h2>
            }

            <h2>@Constants.Level: <em>@Model.Level</em></h2>

            <h2>@Constants.CaptureDate: <em>@Html.DisplayFor(m => m.Date)</em></h2>

            @if (!string.IsNullOrWhiteSpace(Model.Location))
            {
                <h2>@Constants.LocationCaught: <em>@Model.Location</em></h2>
            }
        }
        else
        {
            @using (Html.BeginForm(Constants.Edit, Constants.PokedexNoAccent))
            {
                //Set HiddenFors for other non changing data to persist during edit.
                @Html.HiddenFor(m => m.Date);
                @Html.HiddenFor(m => m.Location);
                @Html.HiddenFor(m => m.MyPokemonId);
                @Html.HiddenFor(m => m.NationalDexPokemonId);
                @Html.HiddenFor(m => m.Sex);
                <div asp-validation-summary="All" class="edit__form"></div>
                <article>
                    <div class="input__container">
                        <h2 class="input__label">
                            @Constants.Nickname:
                        </h2>
                        <div class="input__field">
                            @Html.EditorFor(m => m.Nickname)
                        </div>
                    </div>
                    <div class="input__container">
                        <h2 class="input__label">
                            @Constants.Level:
                        </h2>
                        <div class="input__field">
                            @Html.EditorFor(m => m.Level, new { htmlAttributes = new { min = Model.Level } })
                        </div>
                    </div>
                </article>

                <input type="submit" value="Update My @Constants.Pokemon" />
            }
        }
    </div>

    <div class="pokemon__navigation">
        <a asp-controller="@Constants.PokedexNoAccent" asp-action="@Constants.Edit" asp-route-id="@Model.MyPokemonId">
            @Constants.Edit
        </a>
        <a asp-controller="@Constants.PokedexNoAccent" asp-action="Delete" asp-route-id="@Model.MyPokemonId">
            Release
        </a>
        <a asp-controller="@Constants.NationalDex" asp-action="@Constants.Detail" asp-route-id="@Model.NationalDexPokemonId">
            @Constants.NationalDex @Constants.Detail
        </a>
    </div>
</div>