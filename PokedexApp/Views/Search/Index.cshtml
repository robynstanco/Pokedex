@using Pokedex.Common;

@model SearchViewModel

@{
    ViewData[Constants.Title] = $"{Constants.Search} for {Constants.Pokemon} in your {Constants.Pokedex} and the National {Constants.Pokedex}!";

    string placeholder = "Enter a Name, Japanese Name, Nickname, or Description...";
}

<h1 class="form__header">@ViewData[Constants.Title]</h1>

<div class="form__container">
    @using (Html.BeginForm("Index", Constants.Search))
    {
        <div asp-validation-summary="All"></div>
        <article>
            <div class="input__container">
                <div class="input__label">
                    @Constants.Search:
                </div>
                <div class="input__field">
                    @Html.TextBoxFor(m => m.SearchString, new { placeholder = placeholder })
                </div>
            </div>
        </article>
        <article>
            <div class="input__container">
                <div class="input__label">
                    @Constants.Ability:
                </div>
                <div class="input__field">
                    @Html.DropDownListFor(m => m.SelectedAbilityId, Model.AbilityOptions)
                </div>
            </div>
            <div class="input__container">
                <div class="input__label">
                    @Constants.Category:
                </div>
                <div class="input__field">
                    @Html.DropDownListFor(m => m.SelectedCategoryId, Model.CategoryOptions)
                </div>
            </div>
            <div class="input__container">
                <div class="input__label">
                    @Constants.Pokeball:
                </div>
                <div class="input__field">
                    @Html.DropDownListFor(m => m.SelectedPokeballId, Model.PokeballOptions)
                </div>
            </div>
            <div class="input__container">
                <div class="input__label">
                    @Constants.Type:
                </div>
                <div class="input__field">
                    @Html.DropDownListFor(m => m.SelectedTypeId, Model.TypeOptions)
                </div>
            </div>
        </article>

        <input type="submit" value="@Constants.Search" />
    }
</div>

<!--Display search results if populated. -->
@if (Model.FilteredPokemon != null)
{
    <div class="pokemon__container">
        @if (Model.FilteredPokemon.ToList().Count == 0)
        {
            <h1>There were no results matching your @Constants.Search.ToLower() query.</h1>
        }
        else
        {
            foreach (PokemonListingViewModel pokemon in Model.FilteredPokemon)
            {
                @if (pokemon.MyPokemonId.HasValue)
                {
                    <partial name="_MyPokemonPartial" model="pokemon"/>
                }
                else
                {
                    <partial name="_NationalDexPartial" model="pokemon"/>
                }
            }
        }
    </div>
}